<?php

/**
 * @author			David Curras
 * @version			March 6, 2013
 * @filesource		/Views/ImageView.php
 */
class ImageView{
	
	/**
	 * Returns an html string containing the proper form
	 * 
	 * @static	static
	 * @return	string
	 */
	public static function RenderForm($type, $id, $post, $files){
		$html = '';
		$tab = '';
		$imgName = '';
		if(is_numeric($id) && (intval($id) >= 0) && !empty($type)){
			$entity = false;
			switch($type){
				case 'maquinaria':
					$entity = MachineryModel::FindById(intval($id));
					$tab = 'machineries';
					$imgName = 'maquinaria-'.str_pad($id, 4, "0", STR_PAD_LEFT);
					break;
				case 'inmueble':
					$entity = EstateModel::FindById(intval($id));
					$tab = 'estates';
					$imgName = 'inmueble-'.str_pad($id, 4, "0", STR_PAD_LEFT);
					break;
				case 'asociado':
					$entity = PartnerModel::FindById(intval($id));
					$tab = 'partners';
					$imgName = 'asociado-'.str_pad($id, 4, "0", STR_PAD_LEFT);
					break;
			}
			if(!empty($entity)){
				//Debug::Show($post, true);
				if(!empty($files)){
					$errors = '';
					$hasErrors = self::ValidateImage($files['file'], $errors);
					if(!$hasErrors){
						$extension = File::GetExtensionFromPath($files['file']["name"]);
						$tmpImage = 'img/photos/tmpImage.'.$extension;
						move_uploaded_file($files['file']["tmp_name"], $tmpImage);
						$html = '<form action="imagen.html?tipo='.$type.'&id='.$id.'" method="post" enctype="application/x-www-form-urlencoded">'."\n";
						$html .= "\t\t\t\t".'<fieldset class="ui-corner-all">'."\n";
						$html .= "\t\t\t\t\t".'<p class="warning">Seleccione la porcion de imagen que desea guardar</p>'."\n";
						$html .= "\t\t\t\t\t".'<img src="'.$tmpImage.'" alt="Imagen no encontrada" id="jCropTarget" />'."\n";
						$html .= "\t\t\t\t\t".'<input type="hidden" id="x" name="x" />'."\n";
						$html .= "\t\t\t\t\t".'<input type="hidden" id="y" name="y" />'."\n";
						$html .= "\t\t\t\t\t".'<input type="hidden" id="w" name="w" />'."\n";
						$html .= "\t\t\t\t\t".'<input type="hidden" id="h" name="h" />'."\n";
						$html .= "\t\t\t\t\t".'<input type="hidden" name="path" value="'.$tmpImage.'" />'."\n";
						$html .= "\t\t\t\t\t".'<input type="submit" value="Enviar" class="ui-widget ui-widget-content ui-corner-all" />'."\n";
						$html .= "\t\t\t\t\t".'<a href="admin.html#'.$tab.'" title="Volver" class="exit"><img src="img/undo.png" width="32" alt="Volver" /></a>'."\n";
						$html .= "\t\t\t\t".'</fieldset>'."\n";
						$html .= "\t\t\t".'</form>'."\n";
					} else {
						$errors = '<ul>'.$errors.'</ul>';
						$html = self::RenderBasicForm($type, $id, $tab, $entity, $errors);
					}
				} else if(!empty($post) && isset($post['x']) && isset($post['y']) && isset($post['w']) && isset($post['h']) && isset($post['path'])){
					$photo = new Photo(array('id'=>0, 'alt'=>$entity->getTitle(), 'thumbnail'=>'img/photos/'.$imgName.'-thumb.jpg', 'url'=>'img/photos/'.$imgName.'.jpg'));
					$image = new Image($post['path']);
					$image->resample($post['x'], $post['y'], $post['w'], $post['h'], 300, 200);
					$image->exportTo(Image::MIME_JPG, 'img/photos/', $imgName, 90);
					$image->resize(100);
					$image->exportTo(Image::MIME_JPG, 'img/photos/',$imgName.'-thumb', 90);
					PhotoModel::Save($photo);
					$toDelete = $entity->getPhoto()->getId();
					$entity->setPhoto($photo);
					switch($type){
						case 'maquinaria':
							$entity = MachineryModel::Save($entity);
							break;
						case 'inmueble':
							$entity = EstateModel::Save($entity);
							break;
						case 'asociado':
							$entity = PartnerModel::Save($entity);
							break;
					}
					if($toDelete > 1){ //The default image has id 1 and wont be deleted
						PhotoModel::Delete($toDelete);
					}
					header('Location: admin.html#'.$tab);
					return;
				} else {
					$html = self::RenderBasicForm($type, $id, $tab, $entity, '');
				}
			}	
		}
		if(empty($html)){
			header('Location: 404.html');
		}
		return $html;
	}
	
	/**
	 * Returns an html string containing the basic form
	 * 
	 * @static	static
	 * @return	string
	 */
	public static function RenderBasicForm($type, $id, $tab, $entity, $errors){
		$html = '<form action="imagen.html?tipo='.$type.'&id='.$id.'" method="post" enctype="multipart/form-data">'."\n";
		$html .= "\t\t\t\t".'<fieldset class="ui-corner-all">'."\n";
		$html .= "\t\t\t\t\t".'Seleccione la foto <input type="file" name="file" class="ui-widget ui-widget-content ui-corner-all" /><div></div>'."\n";
		$html .= $errors;
		$html .= "\t\t\t\t\t".'<input type="submit" value="Enviar" class="ui-widget ui-widget-content ui-corner-all" />'."\n";
		$html .= "\t\t\t\t\t".'<a href="admin.html#'.$tab.'" title="Volver" class="exit"><img src="img/undo.png" width="32" alt="Volver" /></a>'."\n";
		$html .= "\t\t\t\t".'</fieldset>'."\n";
		$html .= "\t\t\t\t".'<div id="oldPhoto">'."\n";
		$html .= "\t\t\t\t\t".'<p class="warning"><img src="img/warning.png" alt="Error" />La imagen actual ser&aacute; remplazada permanentemente</p>'."\n";
		$html .= "\t\t\t\t\t".'<img src="'.$entity->getPhoto()->getUrl().'" alt="'.$entity->getPhoto()->getAlt().'" />'."\n";
		$html .= "\t\t\t\t".'</div>'."\n";
		$html .= "\t\t\t".'</form>'."\n";
		return $html;
	}
	
	/**
	 * Returns an html string containing the basic form
	 * 
	 * @static	static
	 * @return	bool
	 */
	public static function ValidateImage($file, &$errors){
		$hasErrors = false;
		$fileName = $file["name"];
		$fileType = $file["type"];
		$fileSize = intval($file["size"]);
		$fileTmp = $file["tmp_name"];
		$fileError = intval($file["error"]);
		$imageWidth = 0;
		$imageHeight = 0;
		if(empty($fileName) || empty($fileSize)){
			$errors .= ' <li><p class="error"><img src="img/error.png" alt="Error" />Debe seleccionar una imagen</p></li>';
			$hasErrors = true;
		}
		if($fileType != 'image/gif' && $fileType != 'image/jpeg' && $fileType != 'image/jpg' && $fileType != 'image/png'){
			$errors .= ' <li><p class="error"><img src="img/error.png" alt="Error" />Solo se permiten imagenes jpg, png y gif</p></li>';
			$hasErrors = true;
		} else {
			$errors .= ' <li><p class="success"><img src="img/accept.png" alt="Valido" />Formato "'.$fileType.'" v&aacute;lido</p></li>';
			$info = getimagesize($fileTmp);
			$imageWidth = intval($info[0]);
			$imageHeight = intval($info[1]);
		}
		if($imageWidth < 300){
			$errors .= '<li><p class="error"><img src="img/error.png" alt="Error" />La imagen debe tener al menos 300 pixeles de ancho</p></li>';
			$hasErrors = true;
		} else {
			$errors .= ' <li><p class="success"><img src="img/accept.png" alt="Valido" />La imagen supera los 300 p&iacute;xeles de ancho</p></li>';
		}
		if($imageHeight < 200){
			$errors .= '<li><p class="error"><img src="img/error.png" alt="Error" />La imagen debe tener al menos 200 pixeles de alto</p></li>';
			$hasErrors = true;
		} else {
			$errors .= ' <li><p class="success"><img src="img/accept.png" alt="Valido" />La imagen supera los 200 p&iacute;xeles de alto</p></li>';
		}
		if($fileSize > 2097152){
			$errors .= '<li><p class="error"><img src="img/error.png" alt="Error" />El archivo no debe superar los 2048 KB (2 MB)</p></li>';
			$hasErrors = true;
		} elseif (!empty($fileSize)) {
			$errors .= ' <li><p class="success"><img src="img/accept.png" alt="Valido" />El archivo pesa menos de 2 MB</p></li>';
		}
		if($fileError > 0 && $fileError != 4){
			$errors .= '<li><p class="error"><img src="img/error.png" alt="Error" />Error al subir el archivo, intentelo nuevamente.</p></li>';
			$hasErrors = true;
		}
		return $hasErrors;
	}
}